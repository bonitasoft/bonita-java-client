name: workflow-release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: Keeper-Security/ksm-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }}
          secrets: |
            ${{ vars.KEEPER_OSSRH_RECORD_ID }}/field/login > env:MAVEN_USERNAME
            ${{ vars.KEEPER_OSSRH_RECORD_ID }}/field/password > env:MAVEN_PASSWORD
            ${{ vars.KEEPER_GPG_ARTIFACT_SIGNING_RECORD_ID }}/field/login > env:GPG_KEYNAME
            ${{ vars.KEEPER_GPG_ARTIFACT_SIGNING_RECORD_ID }}/custom_field/gpg-private-key > env:GPG_PRIVATE_KEY
            ${{ vars.KEEPER_GPG_ARTIFACT_SIGNING_RECORD_ID }}/field/password > env:MAVEN_GPG_PASSPHRASE

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ env.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      # Extract version
      - name: Extract version
        shell: bash
        run: echo "##[set-output name=version;]$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
        id: extract_version

      # Build and Push release to maven central
      - name: Build and Push release to Maven central
        run: ./mvnw -B -ntp deploy -DskipTests -Pdeploy
        
      # Create tag and GitHub release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.extract_version.outputs.version }}
          name: Release ${{ steps.extract_version.outputs.version }}
          generateReleaseNotes: true

      # Switch to dev  
      - uses: actions/checkout@v4
        with:
          ref: 'dev'

      # Merge master into dev
      - uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_ref: 'master'
          target_branch: 'dev'
          commit_message_template: 'ci(release): Merge master into dev'

      # Update next dev version
      - name: Git pull
        run: |
          git config pull.rebase false 
          git pull
      - name: Update next version
        run: ./mvnw -B versions:set -DnextSnapshot=true
        id: update_next_version
      - name: Extract next version
        shell: bash
        run: echo "##[set-output name=next_version;]$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
        id: extract_next_version
      - name: Set next version
        run: ./set-version.sh ${{ steps.extract_next_version.outputs.next_version }}
        id: set_next_version
      - name: Commit next version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add --all
          git commit -m "ci(release): Set next dev version"
          git push
